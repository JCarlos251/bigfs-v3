bigfs-v3/
│
├── cliente/
│   ├── __init__.py
│   ├── main.py                 # CLI simples: upload/download/list/delete
│   └── utils.py                # Funções simples: leitura de arquivo local, checksum
│
├── namenode/
│   ├── __init__.py
│   ├── main.py                 # Inicializa o daemon e registra o serviço -- *** IMPLEMENTADO ***
│   ├── namenode.py             # Coordena todas as operações: escrita, leitura, deleção -- *** IMPLEMENTADO ***
│   ├── chunk_manager.py        # Divide e reconstrói arquivos (10MB), controla replicação -- *** IMPLEMENTADO ***
│   ├── metadados.py            # Gerencia estrutura de metadados (dict em memória e persistência) -- *** IMPLEMENTADO ***
│   ├── heartbeat_monitor.py    # Verifica DataNodes ativos (heartbeat)
│   └── replicador.py           # Serviço que mantém fator de replicação fixo (3)
│
├── datanode/
│   ├── __init__.py
│   ├── datanode.py             # Classe com salvar/deletar chunk, validar checksum -- *** IMPLEMENTADO ***
│   ├── main1.py                # Inicializa DataNode 1
│   ├── main2.py                # Inicializa DataNode 2
│   └── storage_utils.py        # Leitura/escrita segura em disco -- *** IMPLEMENTADO ***
│
├── servidor/
│   ├── datanode1/              # Armazenamento físico do DN1 -- *** IMPLEMENTADO ***
│   └── datanode2/              # Armazenamento físico do DN2 -- *** IMPLEMENTADO ***
│
├── core/
│   ├── config.py               # CHUNK_SIZE, REPLICATION_FACTOR, PATHS  -- *** IMPLEMENTADO ***
│   ├── constants.py            # Nomes fixos, limites de tempo, etc. -- *** IMPLEMENTADO ***
│   └── network.py              # Interface Pyro5 para registro e localização -- *** IMPLEMENTADO ***
│
├── scripts/
│   ├── start_namenode.sh
│   ├── start_datanode1.sh
│   ├── start_datanode2.sh
│   └── start_cliente.sh
│
└── README.md

## Para execução de algo dentro de um pacote (ex. executar o 'main' do namenode):
## no caminho: C:\Users\administrator\Documents\VSCODE\bigfs-v3>
## utilizar: python -m namenode.main